<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="teacher">
	<!-- 강의 등록 insert -->
	<insert id="teacher_type1_insert">
		insert into lecture
		(lecture_idx, cell_type, main_category, sub_category,
		userid, subject, main_img, videofile, content, price)
		values ((select nvl(max(lecture_idx)+1,1) from lecture),
		#{cell_type}, #{main_category}, #{sub_category},
		#{userid}, #{subject}, #{main_img}, #{videofile}, #{content}, #{price})
	</insert>
	
	<insert id="teacher_type2_insert">
		insert into lecture
		(lecture_idx,
		 cell_type, main_category, sub_category, 
		 userid, subject, price,
		 content, main_img, videofile,
		 lecture_date, lecture_start, lecture_time
		 )
		values
		(
		 (select nvl(max(lecture_idx)+1, 1) from lecture),
		 '2', #{main_category}, #{sub_category}, 
		 #{userid}, #{subject}, #{price},
		 #{content}, #{main_img}, #{videofile},
		 #{lecture_date}, #{lecture_start}, #{lecture_time}
		 )
	</insert>
	
	<insert id="teacher_type3_insert">
		insert into lecture
		(lecture_idx, cell_type, main_category,
		 sub_category, userid, subject,
		 price, content, main_img, 
		 lecture_date, lecture_start, lecture_time,
		 lecture_address, lecture_address2 )
		values
		(
		 (select nvl(max(lecture_idx)+1, 1) from lecture),
		 '3', #{main_category}, #{sub_category}, 
		 #{userid}, #{subject}, #{price}, 
		 #{content}, #{main_img}, #{lecture_date}, 
		 #{lecture_start}, #{lecture_time}, #{lecture_address},
		 #{lecture_address2}
		)
	</insert>
	
	<!-- 강의 리스트 select + 페이징 처리 -->
	<select id="typeAList" resultType="com.TeamProject.Kdemy.model.teacher.dto.TeacherDTO">
	 select *
			from (
			    select rownum as rn, A.*
			    from (
			        select lecture_idx,main_category,sub_category,userid,subject,main_img
			        ,videofile ,content, price
			        from lecture
			        where cell_type=1
			        order by lecture_idx desc 
			    ) A    
			) where rn between #{start} and #{end}
	</select>
	
	<select id="online_list" 
	resultType="com.TeamProject.Kdemy.model.teacher.dto.TeacherDTO">
		select * from (
			select rownum as rn, A.* from 
			(
				select * from lecture
				where cell_type=2
				order by lecture_idx desc
			) A
		) where rn between #{start} and #{end}
	</select>
	
	<select id="offline_list" 
	resultType="com.TeamProject.Kdemy.model.teacher.dto.TeacherDTO">
		select * from (
			select rownum as rn, A.* from 
			(
				select * from lecture
				where cell_type=3
				order by lecture_idx desc
			) A
		) where rn between #{start} and #{end}
	</select>
	<!-- 각 페이징 처리 -->
	<select id="countTypeAList" resultType="int">
	  select count(*) from lecture where cell_type=1
	</select>
	
	<select id="countTypeBList" resultType="int">
	  select count(*) from lecture where cell_type=2
	</select>
	
	<select id="countTypeCList" resultType="int">
	  select count(*) from lecture where cell_type=3
	</select>


	<!-- 강의 view 처리 -->	
	<select id="lecture_list_view"
	parameterType="int"
	resultType="com.TeamProject.Kdemy.model.teacher.dto.TeacherDTO">
		select * from lecture
		where lecture_idx=#{lecture_idx}
	</select>
	
</mapper>














